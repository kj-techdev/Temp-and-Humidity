[{"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\index.js":"1","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\App.js":"2","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\styles\\GlobalStyle.js":"3","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\context\\globalContext.js":"4","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\styles\\Layouts.js":"5","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Dashboard\\Dashboard.js":"6","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Orb\\Orb.js":"7","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Income\\Income.js":"8","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Navigation\\Navigation.js":"9","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Expenses\\Expenses.js":"10","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Expenses\\ExpenseForm.js":"11","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\menuItems.js":"12","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\Icons.js":"13","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\dateFormat.js":"14","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\History\\History.js":"15","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Chart\\Chart.js":"16","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Form\\Form.js":"17","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Button\\Button.js":"18","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js":"19","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\index.js":"20","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\App.js":"21","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\styles\\GlobalStyle.js":"22","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\styles\\Layouts.js":"23","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Orb\\Orb.js":"24","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Reports\\Reports.js":"25","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Navigation\\Navigation.js":"26","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Dashboard\\Dashboard.js":"27","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\Icons.js":"28","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\dateFormat.js":"29","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\menuItems.js":"30","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Chart\\Chart.js":"31","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\ViewData\\ViewData.js":"32"},{"size":424,"mtime":1716250274257,"results":"33","hashOfConfig":"34"},{"size":2254,"mtime":1716250274286,"results":"35","hashOfConfig":"34"},{"size":1291,"mtime":1716250274313,"results":"36","hashOfConfig":"34"},{"size":2725,"mtime":1716250275037,"results":"37","hashOfConfig":"34"},{"size":250,"mtime":1716250274336,"results":"38","hashOfConfig":"34"},{"size":4199,"mtime":1716260059571,"results":"39","hashOfConfig":"34"},{"size":397,"mtime":1716250274603,"results":"40","hashOfConfig":"34"},{"size":3561,"mtime":1716250274678,"results":"41","hashOfConfig":"34"},{"size":4231,"mtime":1716288024292,"results":"42","hashOfConfig":"34"},{"size":4050,"mtime":1716250274848,"results":"43","hashOfConfig":"34"},{"size":5108,"mtime":1716250274817,"results":"44","hashOfConfig":"34"},{"size":683,"mtime":1716250274364,"results":"45","hashOfConfig":"34"},{"size":1918,"mtime":1716264908385,"results":"46","hashOfConfig":"34"},{"size":118,"mtime":1716250274386,"results":"47","hashOfConfig":"34"},{"size":4335,"mtime":1716250275002,"results":"48","hashOfConfig":"34"},{"size":5407,"mtime":1716250274745,"results":"49","hashOfConfig":"34"},{"size":5438,"mtime":1716250274474,"results":"50","hashOfConfig":"34"},{"size":685,"mtime":1716250274571,"results":"51","hashOfConfig":"34"},{"size":4804,"mtime":1716250274882,"results":"52","hashOfConfig":"34"},{"size":299,"mtime":1716382988287,"results":"53","hashOfConfig":"54"},{"size":1400,"mtime":1716383082662,"results":"55","hashOfConfig":"54"},{"size":1291,"mtime":1716250274313,"results":"56","hashOfConfig":"54"},{"size":250,"mtime":1716383714357,"results":"57","hashOfConfig":"54"},{"size":397,"mtime":1716250274603,"results":"58","hashOfConfig":"54"},{"size":4368,"mtime":1716540616828,"results":"59","hashOfConfig":"54"},{"size":3391,"mtime":1716396330972,"results":"60","hashOfConfig":"54"},{"size":11132,"mtime":1716542217747,"results":"61","hashOfConfig":"54"},{"size":1918,"mtime":1716264908385,"results":"62","hashOfConfig":"54"},{"size":118,"mtime":1716250274386,"results":"63","hashOfConfig":"54"},{"size":454,"mtime":1716382790781,"results":"64","hashOfConfig":"54"},{"size":3536,"mtime":1716540601180,"results":"65","hashOfConfig":"54"},{"size":3767,"mtime":1716540623376,"results":"66","hashOfConfig":"54"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1sxt0cq",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},"1q3or6e",{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"135"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\index.js",[],[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\App.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\styles\\GlobalStyle.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\context\\globalContext.js",["173","174","175","176"],[],"import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  //calculate incomes\r\n  const addIncome = async (income) => {\r\n    const response = await axios\r\n      .post(`${BASE_URL}add-income`, income)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n      });\r\n    getIncomes();\r\n  };\r\n\r\n  const getIncomes = async () => {\r\n    const response = await axios.get(`${BASE_URL}get-incomes`);\r\n    setIncomes(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  const deleteIncome = async (id) => {\r\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n    getIncomes();\r\n  };\r\n\r\n  const totalIncome = () => {\r\n    let totalIncome = 0;\r\n    incomes.forEach((income) => {\r\n      totalIncome = totalIncome + income.amount;\r\n    });\r\n\r\n    return totalIncome;\r\n  };\r\n\r\n  //calculate incomes\r\n  const addExpense = async (income) => {\r\n    const response = await axios\r\n      .post(`${BASE_URL}add-expense`, income)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n      });\r\n    getExpenses();\r\n  };\r\n\r\n  const getExpenses = async () => {\r\n    const response = await axios.get(`${BASE_URL}get-expenses`);\r\n    setExpenses(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n    getExpenses();\r\n  };\r\n\r\n  const totalExpenses = () => {\r\n    let totalIncome = 0;\r\n    expenses.forEach((income) => {\r\n      totalIncome = totalIncome + income.amount;\r\n    });\r\n\r\n    return totalIncome;\r\n  };\r\n\r\n  const totalBalance = () => {\r\n    return totalIncome() - totalExpenses();\r\n  };\r\n\r\n  const transactionHistory = () => {\r\n    const history = [...incomes, ...expenses];\r\n    history.sort((a, b) => {\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n    return history.slice(0, 3);\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        addIncome,\r\n        getIncomes,\r\n        incomes,\r\n        deleteIncome,\r\n        expenses,\r\n        totalIncome,\r\n        addExpense,\r\n        getExpenses,\r\n        deleteExpense,\r\n        totalExpenses,\r\n        totalBalance,\r\n        transactionHistory,\r\n        error,\r\n        setError,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\styles\\Layouts.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Dashboard\\Dashboard.js",["177","178","179","180","181"],[],"import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport History from '../../History/History';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport { dollar } from '../../utils/Icons';\r\nimport Chart from '../Chart/Chart';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction Dashboard() {\r\n    const {totalExpenses, incomes, expenses, totalIncome, totalBalance, getIncomes, getExpenses} = useGlobalContext()\r\n\r\n    useEffect(() => {\r\n        getIncomes()\r\n        getExpenses()\r\n    }, [])\r\n\r\n    // State for storing current date\r\n    const [currentDate, setCurrentDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        const date = new Date();\r\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n        setCurrentDate(date.toLocaleDateString('en-US', options));\r\n    }, []);\r\n\r\n    return (\r\n        <DashboardStyled>\r\n            <InnerLayout>\r\n                <h2>Dashboard</h2>\r\n                <p>{currentDate}</p> \r\n                <div className=\"stats-con\">\r\n                    <div>\r\n                        <h2>Total Balance</h2>\r\n                        <p style={{ color: '#454545' }}>{dollar}{totalIncome() - totalExpenses()}</p>\r\n                        <small>2.47% Last month $24,478</small>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Total Income</h2>\r\n                        <p style={{ color: 'green' }}>{dollar}{totalIncome()}</p>\r\n                        <small>2.47% Last month $24,478</small>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Total Expense</h2>\r\n                        <p style={{ color: 'red' }}>{dollar}{totalExpenses()}</p>\r\n                        <small>2.47% Last month $24,478</small>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chart-con\">\r\n                <h2>Analytics</h2>\r\n                <small>Track your expenses and income. </small>\r\n                    <Chart />\r\n                </div>\r\n                <div className=\"history-con\">\r\n                <h2>Transaction History</h2>\r\n                    <History />\r\n                </div>\r\n            </InnerLayout>\r\n        </DashboardStyled>\r\n    )\r\n}\r\n\r\nconst DashboardStyled = styled.div`\r\n    font-family: 'Segoe UI', sans-serif; \r\n    background-color: #ffffff; \r\n    padding: 20px;\r\n\r\n    .stats-con {\r\n        margin-top: 1rem;\r\n        display: grid;\r\n        grid-template-columns: repeat(3, 1fr); \r\n        grid-gap: 1rem; \r\n        margin-bottom: 1rem; \r\n\r\n        > div {\r\n            background: #ffffff; \r\n            border-radius: 8px; \r\n            box-shadow: 0 4px 8px rgba(0,0,0,0.08); \r\n            padding: 20px; \r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n            margin: 1rem 0;\r\n \r\n            h2 {\r\n                font-size: 1.2rem;\r\n                color: #222260;\r\n                margin-bottom: 0.5rem;\r\n            }\r\n            p {\r\n                font-size: 2.4rem;\r\n                font-weight: bold;\r\n                margin: 0;\r\n            }\r\n            small {\r\n                font-size: 1rem;\r\n                color: #666;\r\n            }\r\n        }\r\n    }\r\n\r\n    .chart-con {\r\n        background: #ffffff;\r\n        border-radius: 8px;\r\n        box-shadow: 0 4px 8px rgba(0,0,0,0.08);\r\n        padding: 20px;\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    .history-con {\r\n        background: #ffffff;\r\n        border-radius: 8px;\r\n        box-shadow: 0 4px 8px rgba(0,0,0,0.08);\r\n        padding: 20px;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        h2 {\r\n            font-size: 1.5rem;\r\n            margin-bottom: 1rem;\r\n        }\r\n\r\n        .salary-item {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            margin-top: 0.5rem;\r\n\r\n            p {\r\n                font-weight: bold;\r\n                font-size: 1.4rem;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Orb\\Orb.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Income\\Income.js",["182","183"],[],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport Form from '../Form/Form';\r\nimport IncomeItem from '../IncomeItem/IncomeItem';\r\n\r\nfunction Income() {\r\n    const { addIncome, incomes, getIncomes, deleteIncome, totalIncome } = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        getIncomes();\r\n    }, []);\r\n    \r\n    return (\r\n        <IncomeStyled>\r\n            <InnerLayout>\r\n                <h2>Incomes</h2>\r\n                <h2 className=\"total-income\">\r\n                    Total Income: <span>${totalIncome()}</span>\r\n                </h2>\r\n                <div className=\"income-content\">\r\n                    <div className=\"form-container\">\r\n                        <Form />\r\n                    </div>\r\n                    <div className=\"incomes\">\r\n                        <div className=\"recently-added-container\">\r\n                            <h3>Recently Added</h3>\r\n                        </div>\r\n                        {incomes.map((income) => {\r\n                            const { _id, title, amount, date, category, description, type } = income;\r\n                            return (\r\n                                <IncomeItem\r\n                                    key={_id}\r\n                                    id={_id}\r\n                                    title={title}\r\n                                    description={description}\r\n                                    amount={amount}\r\n                                    date={date}\r\n                                    type={type}\r\n                                    category={category}\r\n                                    indicatorColor=\"var(--color-green)\"\r\n                                    deleteItem={deleteIncome}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </InnerLayout>\r\n        </IncomeStyled>\r\n    );\r\n}\r\n\r\nconst IncomeStyled = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    background-color: #FFFFFF;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    \r\n    .total-income {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: #FFFFFF;\r\n        border: 2px solid #FFFFFF;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.08);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin: 1rem 0;\r\n        font-size: 2rem;\r\n        gap: 0.5rem;\r\n        span {\r\n            font-size: 2.5rem;\r\n            font-weight: 600;\r\n            color: var(--color-green);\r\n        }\r\n    }\r\n    \r\n    .income-content {\r\n        display: flex;\r\n        gap: 2rem;\r\n        .form-container {\r\n            background: #FFFFFF;\r\n            border: 2px solid #FFFFFF;\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.08);\r\n            border-radius: 20px;\r\n            padding: 1rem;\r\n        }\r\n        .incomes {\r\n            flex: 1;\r\n        }\r\n\r\n    }\r\n    .recently-added-container {\r\n        display: flex;\r\n        justify-content: center; \r\n        background: #FFFFFF;\r\n        border: 2px solid #FFFFFF;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.08);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin-bottom: 1rem;\r\n        h3 {\r\n            margin: 0;\r\n            font-size: 1.5rem;\r\n            color: #222260;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Income;","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Navigation\\Navigation.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Expenses\\Expenses.js",["184","185","186"],[],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport Form from '../Form/Form';\r\nimport IncomeItem from '../IncomeItem/IncomeItem';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nfunction Expenses() {\r\n    const { addIncome, expenses, getExpenses, deleteExpense, totalExpenses } = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        getExpenses();\r\n    }, []);\r\n\r\n    return (\r\n        <ExpenseStyled>\r\n            <InnerLayout>\r\n                <h2>Expenses</h2>\r\n                <h2 className=\"total-income\">\r\n                    Total expenses: <span>${totalExpenses()}</span>\r\n                </h2>\r\n                <div className=\"income-content\">\r\n                    <div className=\"form-container\">\r\n                        <ExpenseForm />\r\n                    </div>\r\n                    <div className=\"incomes\">\r\n                        <div className=\"recently-added-container\">\r\n                            <h3>Recently Added</h3>\r\n                        </div>\r\n                        {expenses.map((income) => {\r\n                            const { _id, title, amount, date, category, description, type } = income;\r\n                            console.log(income);\r\n                            return (\r\n                                <IncomeItem\r\n                                    key={_id}\r\n                                    id={_id}\r\n                                    title={title}\r\n                                    description={description}\r\n                                    amount={amount}\r\n                                    date={date}\r\n                                    type={type}\r\n                                    category={category}\r\n                                    indicatorColor=\"red\"\r\n                                    deleteItem={deleteExpense}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </InnerLayout>\r\n        </ExpenseStyled>\r\n    );\r\n}\r\n\r\nconst ExpenseStyled = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    background-color: #FFFFFF;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    \r\n    h3 {\r\n        text-align: center; \r\n    }\r\n\r\n    .total-income {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: #FFFFFF;\r\n        border: 2px solid #FFFFFF;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.09);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin: 1rem 0;\r\n        font-size: 2rem;\r\n        gap: .5rem;\r\n        span {\r\n            font-size: 2.5rem;\r\n            font-weight: 600;\r\n            color: red;\r\n        }\r\n    }\r\n\r\n    .income-content {\r\n        display: flex;\r\n        gap: 2rem;\r\n\r\n        .form-container {\r\n            background: #FFFFFF;\r\n            border: 2px solid #FFFFFF;\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.09);\r\n            border-radius: 20px;\r\n            padding: 1rem;\r\n        }\r\n\r\n        .incomes {\r\n            flex: 1;\r\n            .income-item {\r\n                background: #FFFFFF;\r\n                border: 2px solid #FFFFFF;\r\n                box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.09);\r\n                border-radius: 20px;\r\n                margin-bottom: 1rem;\r\n                padding: 1rem;\r\n            }\r\n        }\r\n\r\n        .recently-added-container {\r\n            display: flex;\r\n            justify-content: center; \r\n            background: #FFFFFF;\r\n            border: 2px solid #FFFFFF;\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.08);\r\n            border-radius: 20px;\r\n            padding: 1rem;\r\n            margin-bottom: 1rem;\r\n            h3 {\r\n                margin: 0;\r\n                font-size: 1.5rem;\r\n                color: #222260;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Expenses;","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Expenses\\ExpenseForm.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\menuItems.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\Icons.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\utils\\dateFormat.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\History\\History.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Chart\\Chart.js",["187"],[],"import React, { useState } from 'react';\r\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { dateFormat } from '../../utils/dateFormat';\r\nimport { parseISO, startOfMonth, endOfMonth, startOfWeek, endOfWeek, startOfYear, endOfYear, isWithinInterval, format } from 'date-fns';\r\n\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n);\r\n\r\nfunction Chart() {\r\n    const { incomes, expenses } = useGlobalContext();\r\n    const [timeframe, setTimeframe] = useState('monthly');\r\n\r\n    const now = new Date();\r\n\r\n    const filterItemsByDateRange = (items, startDate, endDate) => {\r\n        return items.filter(item => {\r\n            const itemDate = parseISO(item.date);\r\n            return isWithinInterval(itemDate, { start: startDate, end: endDate });\r\n        });\r\n    };\r\n\r\n    const aggregateData = (items, period) => {\r\n        const periods = {\r\n            monthly: { start: startOfMonth(now), end: endOfMonth(now) },\r\n            weekly: { start: startOfWeek(now), end: endOfWeek(now) },\r\n            yearly: { start: startOfYear(now), end: endOfYear(now) },\r\n        };\r\n\r\n        const { start, end } = periods[period];\r\n        const filteredItems = filterItemsByDateRange(items, start, end);\r\n\r\n        return filteredItems.map(item => ({\r\n            ...item,\r\n            formattedDate: format(parseISO(item.date), 'dd/MM/yyyy')\r\n        }));\r\n    };\r\n\r\n    const aggregatedIncomes = aggregateData(incomes, timeframe);\r\n    const aggregatedExpenses = aggregateData(expenses, timeframe);\r\n\r\n    const data = {\r\n        labels: aggregatedIncomes.map(inc => inc.formattedDate),\r\n        datasets: [\r\n            {\r\n                label: 'Income',\r\n                data: aggregatedIncomes.map(income => income.amount),\r\n                borderColor: 'green',\r\n                backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                tension: 0.2,\r\n                fill: true,\r\n            },\r\n            {\r\n                label: 'Expenses',\r\n                data: aggregatedExpenses.map(expense => expense.amount),\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                tension: 0.2,\r\n                fill: true,\r\n            }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                    font: {\r\n                        family: 'Segoe UI',\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                mode: 'index',\r\n                intersect: false,\r\n                bodyFont: {\r\n                    family: 'Segoe UI',\r\n                },\r\n                titleFont: {\r\n                    family: 'Segoe UI',\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        family: 'Segoe UI',\r\n                    }\r\n                }\r\n            },\r\n            y: {\r\n                display: true,\r\n                title: {\r\n                    display: false,\r\n                },\r\n                beginAtZero: true,\r\n                ticks: {\r\n                    font: {\r\n                        family: 'Segoe UI',\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ChartStyled>\r\n            <div className=\"header\">\r\n                <div className=\"timeframe-selector\">\r\n                    <label htmlFor=\"timeframe\">Select Timeframe: </label>\r\n                    <select id=\"timeframe\" value={timeframe} onChange={(e) => setTimeframe(e.target.value)}>\r\n                        <option value=\"weekly\">Weekly</option>\r\n                        <option value=\"monthly\">Monthly</option>\r\n                        <option value=\"yearly\">Yearly</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <Line options={options} data={data} />\r\n        </ChartStyled>\r\n    );\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    background: #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n\r\n    .header {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .timeframe-selector {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 0.5rem;\r\n\r\n        label {\r\n            margin-right: 1rem;\r\n            font-size: 1rem;\r\n            color: #696969;\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n        }\r\n\r\n        select {\r\n            padding: 0.5rem;\r\n            border: 1px solid #ddd;\r\n            border-radius: 5px;\r\n            font-size: 1rem;\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            color: #696969;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Chart;\r\n","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Form\\Form.js",["188"],[],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\nfunction Form() {\r\n    const { addIncome, getIncomes, error, setError } = useGlobalContext();\r\n    const [inputState, setInputState] = useState({\r\n        title: '',\r\n        amount: '',\r\n        date: '',\r\n        category: '',\r\n        description: '',\r\n    });\r\n\r\n    const { title, amount, date, category, description } = inputState;\r\n\r\n    const handleInput = name => e => {\r\n        setInputState({ ...inputState, [name]: e.target.value });\r\n        setError('');\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addIncome(inputState);\r\n        setInputState({\r\n            title: '',\r\n            amount: '',\r\n            date: '',\r\n            category: '',\r\n            description: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FormStyled onSubmit={handleSubmit}>\r\n            {error && <p className='error'>{error}</p>}\r\n\r\n            <h3>Add Incomes</h3>\r\n            <label>Salary Title</label>\r\n            <div className=\"input-control\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={title}\r\n                    name={'title'} \r\n                    placeholder=\"Salary Title\"\r\n                    onChange={handleInput('title')}\r\n                />\r\n            </div>\r\n            <label>Amount</label>\r\n            <div className=\"input-control\">\r\n                <input \r\n                    value={amount}  \r\n                    type=\"text\" \r\n                    name={'amount'} \r\n                    placeholder={'Salary Amount'}\r\n                    onChange={handleInput('amount')} \r\n                />\r\n            </div>\r\n            <label>Date</label>\r\n            <div className=\"input-control\">\r\n                <DatePicker \r\n                    id='date'\r\n                    placeholderText='Enter A Date'\r\n                    selected={date}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    onChange={(date) => {\r\n                        setInputState({ ...inputState, date: date });\r\n                    }}\r\n                />\r\n            </div>\r\n            <label>Category</label>\r\n            <div className=\"selects input-control\">\r\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\r\n                    <option value=\"\" disabled>Select Option</option>\r\n                    <option value=\"salary\">Salary</option>\r\n                    <option value=\"freelancing\">Freelancing</option>\r\n                    <option value=\"investments\">Investments</option>\r\n                    <option value=\"stocks\">Stocks</option>\r\n                    <option value=\"bitcoin\">Bitcoin</option>\r\n                    <option value=\"bank\">Bank Transfer</option>  \r\n                    <option value=\"youtube\">YouTube</option>  \r\n                    <option value=\"other\">Other</option>  \r\n                </select>\r\n            </div>\r\n            <label>Description</label>\r\n            <div className=\"input-control\">\r\n                <textarea \r\n                    name=\"description\" \r\n                    value={description} \r\n                    placeholder='Add A Reference' \r\n                    id=\"description\" \r\n                    cols=\"30\" \r\n                    rows=\"4\" \r\n                    onChange={handleInput('description')}\r\n                ></textarea>\r\n            </div>\r\n            <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Submit'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'#222260'}\r\n                    color={'#fff'}\r\n                />\r\n            </div>\r\n        </FormStyled>\r\n    );\r\n}\r\n\r\nconst FormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n\r\n    h3 {\r\n        text-align: center; \r\n    }\r\n\r\n    label {\r\n        color: #7a7aa0; \r\n    }\r\n\r\n    input, textarea, select {\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 1px solid #D3D3D3; /* Light Gray Border */\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n\r\n        &::placeholder {\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n\r\n    .input-control {\r\n        input, textarea, select {\r\n            width: 100%;\r\n            border: 1px solid #ededed;\r\n            border-radius: 10px; \r\n        }\r\n    }\r\n\r\n    .selects {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n\r\n        select {\r\n            color: rgba(34, 34, 96, 0.4);\r\n\r\n            &:focus, &:active {\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn {\r\n        button {\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n\r\n            &:hover {\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Form;\r\n","C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\Button\\Button.js",[],[],"C:\\Users\\K\\Downloads\\expense-tracker\\expense-tracker\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\index.js",["189"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n",[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\App.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\styles\\GlobalStyle.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\styles\\Layouts.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Orb\\Orb.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Reports\\Reports.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Navigation\\Navigation.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Dashboard\\Dashboard.js",["190","191","192","193"],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\Icons.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\dateFormat.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\utils\\menuItems.js",["194","195"],[],"import {dashboard, expenses, transactions, trend, stocks} from '../utils/Icons'\r\n\r\nexport const menuItems = [\r\n    {\r\n        id: 1,\r\n        title: 'Dashboard',\r\n        icon: dashboard,\r\n        link: '/dashboard'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"View Data\",\r\n        icon: transactions,\r\n        link: \"/dashboard\",\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Reports\",\r\n        icon: stocks,\r\n        link: \"/dashboard\",\r\n    },\r\n]","C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\Chart\\Chart.js",[],[],"C:\\Users\\K\\Documents\\iot 2\\IOT 2\\frontend\\src\\Components\\ViewData\\ViewData.js",[],[],{"ruleId":"196","severity":1,"message":"197","line":15,"column":11,"nodeType":"198","messageId":"199","endLine":15,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":30,"column":11,"nodeType":"198","messageId":"199","endLine":30,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":45,"column":11,"nodeType":"198","messageId":"199","endLine":45,"endColumn":19},{"ruleId":"196","severity":1,"message":"200","line":60,"column":11,"nodeType":"198","messageId":"199","endLine":60,"endColumn":14},{"ruleId":"196","severity":1,"message":"201","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":18},{"ruleId":"196","severity":1,"message":"202","line":12,"column":27,"nodeType":"198","messageId":"199","endLine":12,"endColumn":34},{"ruleId":"196","severity":1,"message":"203","line":12,"column":36,"nodeType":"198","messageId":"199","endLine":12,"endColumn":44},{"ruleId":"196","severity":1,"message":"204","line":12,"column":59,"nodeType":"198","messageId":"199","endLine":12,"endColumn":71},{"ruleId":"205","severity":1,"message":"206","line":17,"column":8,"nodeType":"207","endLine":17,"endColumn":10,"suggestions":"208"},{"ruleId":"196","severity":1,"message":"209","line":9,"column":13,"nodeType":"198","messageId":"199","endLine":9,"endColumn":22},{"ruleId":"205","severity":1,"message":"210","line":13,"column":8,"nodeType":"207","endLine":13,"endColumn":10,"suggestions":"211"},{"ruleId":"196","severity":1,"message":"212","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":12},{"ruleId":"196","severity":1,"message":"209","line":10,"column":13,"nodeType":"198","messageId":"199","endLine":10,"endColumn":22},{"ruleId":"205","severity":1,"message":"213","line":14,"column":8,"nodeType":"207","endLine":14,"endColumn":10,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"215","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":20},{"ruleId":"196","severity":1,"message":"216","line":10,"column":24,"nodeType":"198","messageId":"199","endLine":10,"endColumn":34},{"ruleId":"196","severity":1,"message":"217","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":21},{"ruleId":"196","severity":1,"message":"218","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"196","severity":1,"message":"219","line":6,"column":21,"nodeType":"198","messageId":"199","endLine":6,"endColumn":31},{"ruleId":"196","severity":1,"message":"220","line":6,"column":33,"nodeType":"198","messageId":"199","endLine":6,"endColumn":39},{"ruleId":"196","severity":1,"message":"221","line":28,"column":10,"nodeType":"198","messageId":"199","endLine":28,"endColumn":25},{"ruleId":"196","severity":1,"message":"222","line":1,"column":20,"nodeType":"198","messageId":"199","endLine":1,"endColumn":28},{"ruleId":"196","severity":1,"message":"223","line":1,"column":44,"nodeType":"198","messageId":"199","endLine":1,"endColumn":49},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'DatePicker' is defined but never used.","'incomes' is assigned a value but never used.","'expenses' is assigned a value but never used.","'totalBalance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.","ArrayExpression",["224"],"'addIncome' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["225"],"'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["226"],"'dateFormat' is defined but never used.","'getIncomes' is assigned a value but never used.","'GlobalStyle' is defined but never used.","'GoogleMap' is defined but never used.","'LoadScript' is defined but never used.","'Marker' is defined but never used.","'currentDateTime' is assigned a value but never used.","'expenses' is defined but never used.","'trend' is defined but never used.",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"233","text":"234"},"Update the dependencies array to be: [getIncomes]",{"range":"235","text":"236"},"Update the dependencies array to be: [getExpenses]",{"range":"237","text":"238"},[658,660],"[getExpenses, getIncomes]",[461,463],"[getIncomes]",[511,513],"[getExpenses]"]